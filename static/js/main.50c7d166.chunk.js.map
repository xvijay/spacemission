{"version":3,"sources":["Card/index.js","Mission/index.js","Extra/Spinner/index.js","Launchpad/index.js","Payload/index.js","Currency/rateField.js","Currency/inrField.js","Currency/usdField.js","Currency/index.js","Main/index.js","Layout/index.js","App.js","serviceWorker.js","index.js"],"names":["CardComponent","props","Card","key","id","Header","name","Body","children","Mission","Container","style","marginTop","Row","data","map","item","index","Col","xs","md","sm","lg","mission_name","className","fontSize","description","payload_ids","element","title","to","Loader","Spinner","animation","variant","LaunchpadPage","state","allStatus","selectStatus","updateContent","e","target","value","launchData","filter","status","setState","this","Set","Fragment","Form","Group","as","controlId","Label","column","color","Control","onChange","Badge","pill","float","site_id","ListGroup","Item","fontWeight","location","region","latitude","longitude","details","React","Component","PayloadClass","axios","get","match","params","then","res","console","log","payloadData","catch","error","alert","span","offset","payload_type","manufacturer","nationality","customers","length","join","norad_id","orbit","payload_mass_kg","payload_mass_lbs","margin","orbit_params","Object","keys","charAt","toUpperCase","slice","split","RateField","InputGroup","Prepend","Text","type","placeholder","aria-describedby","required","Feedback","InrField","USDField","Currency","rate","inr","usd","newInr","newUsd","isNaN","Space","missionData","path","render","Launchpad","Payload","Jumbotron","src","alt","width","fontFamily","marginLeft","App","Navbar","collapseOnSelect","expand","bg","Brand","href","height","Toggle","aria-controls","Collapse","Nav","Link","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.50c7d166.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nconst CardComponent = props => {\n  return (\n    <Card key={props.id}>\n      <Card.Header>{props.name}</Card.Header>\n      <Card.Body id=\"style-1\">{props.children}</Card.Body>\n    </Card>\n  );\n};\n\nexport default CardComponent;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport CardComponent from \"../Card\";\n\nconst Mission = props => {\n  return (\n    <Container style={{ marginTop: \"2%\" }}>\n      <Row>\n        {props.data.map((item, index) => {\n          return (\n            <Col xs={12} md={6} sm={6} lg={4} key={index}>\n              <CardComponent id={item.id} name={item.mission_name}>\n                <blockquote className=\"blockquote mb-0\">\n                  <p style={{ fontSize: \"0.9rem\" }}> {item.description} </p>\n                  <strong>Pay Load Id</strong>\n\n                  {item.payload_ids.map((element, index) => (\n                    <footer className=\"blockquote-footer\" key={index}>\n                      <cite title=\"Source Title\">\n                        <Link to={`/payload/${element}`}>{element}</Link>\n                      </cite>\n                    </footer>\n                  ))}\n                </blockquote>\n              </CardComponent>\n            </Col>\n          );\n        })}\n      </Row>\n    </Container>\n  );\n};\n\nexport default Mission;\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nexport const Loader = () => (\n  <div className=\"centerDiv\">\n    <Spinner animation=\"grow\" variant=\"primary\" />\n    <Spinner animation=\"grow\" variant=\"secondary\" />\n    <Spinner animation=\"grow\" variant=\"success\" />\n    <Spinner animation=\"grow\" variant=\"danger\" />\n    <Spinner animation=\"grow\" variant=\"warning\" />\n    <Spinner animation=\"grow\" variant=\"info\" />\n    <Spinner animation=\"grow\" variant=\"light\" />\n    <Spinner animation=\"grow\" variant=\"dark\" />\n  </div>\n);\n","import React from \"react\";\nimport {\n  Container,\n  Card,\n  Row,\n  Col,\n  ListGroup,\n  Badge,\n  Form\n} from \"react-bootstrap\";\n\nclass LaunchpadPage extends React.Component {\n  state = {\n    allStatus: [],\n    selectStatus: \"\"\n  };\n  componentDidMount() {\n    this.setState({\n      allStatus: [...new Set(this.props.launchData.map(item => item.status))],\n      launchData: this.props.launchData\n    });\n  }\n  updateContent = e => {\n    let selectStatus = e.target.value;\n    let data = [...this.props.launchData];\n    if (selectStatus !== \"0\") {\n      data = data.filter(item => item.status === selectStatus);\n    }\n    this.setState({ launchData: data });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Row>\n          <Col xs={6} md={4}>\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n              <Form.Label column sm=\"3\">\n                <span style={{ color: \"white\" }}>Select Status</span>\n              </Form.Label>\n              <Col sm=\"10\">\n                <Form.Control as=\"select\" onChange={e => this.updateContent(e)}>\n                  {this.props.launchData ? (\n                    this.state.allStatus.map(item => (\n                      <option key={item} value={item}>\n                        {item}\n                      </option>\n                    ))\n                  ) : (\n                    <option>...</option>\n                  )}\n                  <option key={0} value={0}>\n                    All\n                  </option>\n                </Form.Control>\n              </Col>\n            </Form.Group>\n          </Col>\n        </Row>\n        {this.state.launchData ? (\n          <Container style={{ marginTop: \"2%\" }}>\n            <Row>\n              {this.state.launchData.map((item, index) => {\n                return (\n                  <Col xs={12} md={6} sm={6} lg={4} key={index}>\n                    <Card key={item.id}>\n                      <Card.Header>\n                        <Badge\n                          pill\n                          variant={\n                            item.status === \"active\"\n                              ? \"success\"\n                              : item.status === \"retired\"\n                              ? \"info\"\n                              : item.status === \"under construction\"\n                              ? \"warning\"\n                              : \"danger\"\n                          }\n                          style={{ float: \"left\", color: \"transparent\" }}>\n                          .\n                        </Badge>\n                        {item.site_id}\n                      </Card.Header>\n                      <Card.Body id=\"style-1\">\n                        <blockquote className=\"blockquote mb-0\">\n                          {/* <p style={{ fontSize: \"0.9rem\" }}> */}\n                          <ListGroup variant=\"flush\">\n                            <ListGroup.Item>\n                              <span style={{ fontWeight: \"bold\" }}>\n                                Location:\n                              </span>{\" \"}\n                              {item.location.name}\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                              <span style={{ fontWeight: \"bold\" }}>Regin:</span>{\" \"}\n                              {item.location.region}\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                              <span style={{ fontWeight: \"bold\" }}>\n                                Coordinates:\n                              </span>{\" \"}\n                              {item.location.latitude}/{item.location.longitude}\n                            </ListGroup.Item>\n                            {/* <ListGroup.Item></ListGroup.Item> */}\n                          </ListGroup>\n                          <p style={{ fontSize: \"0.9rem\", marginTop: \"10%\" }}>\n                            {\" \"}\n                            {item.details}{\" \"}\n                          </p>\n                        </blockquote>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                );\n              })}\n            </Row>\n          </Container>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default LaunchpadPage;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport { Loader } from \"../Extra/Spinner\";\nimport CardComponent from \"../Card\";\n\nclass PayloadClass extends React.Component {\n  state = {};\n  componentDidMount() {\n    axios\n      .get(\n        `https://api.spacexdata.com/v3/payloads/${this.props.match.params.id}`\n      )\n      .then(res => {\n        console.log(res.data);\n        this.setState({ payloadData: res.data });\n      })\n      .catch(function(error) {\n        alert(\"Cannot See PayLod now, due to some technical issues\");\n      });\n  }\n  render() {\n    return (\n      <Container style={{ marginTop: \"2%\" }}>\n        <Row>\n          <Col md={{ span: 6, offset: 3 }}>\n            <CardComponent id={1} name={this.props.match.params.id}>\n              {this.state.payloadData ? (\n                <React.Fragment>\n                  <table>\n                    <tbody>\n                      <tr>\n                        <td>Type</td>\n                        <td>{this.state.payloadData.payload_type}</td>\n                      </tr>\n                      <tr>\n                        <td>Manufacturer</td>\n                        <td>{this.state.payloadData.manufacturer}</td>\n                      </tr>\n                      <tr>\n                        <td>Nationality</td>\n                        <td>{this.state.payloadData.nationality}</td>\n                      </tr>\n                      <tr>\n                        <td>Customers</td>\n                        <td>\n                          {!!this.state.payloadData.customers &&\n                          this.state.payloadData.customers.length\n                            ? this.state.payloadData.customers.join(\", \")\n                            : \"\"}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>Norad Id</td>\n                        <td>\n                          {!!this.state.payloadData.norad_id &&\n                          this.state.payloadData.norad_id.length\n                            ? this.state.payloadData.norad_id.join(\", \")\n                            : \"\"}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>Orbit</td>\n                        <td>{this.state.payloadData.orbit}</td>\n                      </tr>\n                      <tr>\n                        <td>Payload Mass Kg</td>\n                        <td>{this.state.payloadData.payload_mass_kg}</td>\n                      </tr>\n                      <tr>\n                        <td>Payload Mass lbs</td>\n                        <td>{this.state.payloadData.payload_mass_lbs}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n\n                  <div\n                    className=\"card-small-title m-tb-25 \"\n                    style={{ margin: \"5% 0\", fontSize: \"1.2rem\" }}>\n                    Orbit params\n                  </div>\n                  <table>\n                    <tbody>\n                      {this.state.payloadData.orbit_params\n                        ? Object.keys(this.state.payloadData.orbit_params).map(\n                            (key, index) => (\n                              <tr key={index}>\n                                <td>\n                                  {(key.charAt(0).toUpperCase() + key.slice(1))\n                                    .split(\"_\")\n                                    .join(\" \")}\n                                </td>\n                                <td>\n                                  {this.state.payloadData.orbit_params[key]}\n                                </td>\n                              </tr>\n                            )\n                          )\n                        : null}\n                    </tbody>\n                  </table>\n                </React.Fragment>\n              ) : (\n                <Loader></Loader>\n              )}\n            </CardComponent>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default PayloadClass;\n","import React from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\n\nconst RateField = props => (\n  <Form.Group controlId=\"rate\">\n    <Form.Label>Rate</Form.Label>\n    <InputGroup>\n      <InputGroup.Prepend>\n        <InputGroup.Text id=\"inputGroupPrepend\">*</InputGroup.Text>\n      </InputGroup.Prepend>\n      <Form.Control\n        value={props.value}\n        type=\"text\"\n        placeholder=\"Rate\"\n        aria-describedby=\"inputGroupPrepend\"\n        required\n        onChange={props.onChange}\n      />\n      <Form.Control.Feedback type=\"invalid\">required</Form.Control.Feedback>\n    </InputGroup>\n  </Form.Group>\n);\n\nexport default RateField;\n","import React from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\n\nconst InrField = props => (\n  <Form.Group controlId=\"inr\">\n    <Form.Label>INR</Form.Label>\n    <InputGroup>\n      <InputGroup.Prepend>\n        <InputGroup.Text id=\"inputGroupPrepend\">₹</InputGroup.Text>\n      </InputGroup.Prepend>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"\"\n        aria-describedby=\"inputGroupPrepend\"\n        required\n        onChange={props.onChange}\n        value={props.value}\n      />\n      <Form.Control.Feedback type=\"invalid\">required</Form.Control.Feedback>\n    </InputGroup>\n  </Form.Group>\n);\n\nexport default InrField;\n","import React from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\n\nconst USDField = props => (\n  <Form.Group controlId=\"usd\">\n    <Form.Label>USD</Form.Label>\n    <InputGroup>\n      <InputGroup.Prepend>\n        <InputGroup.Text id=\"inputGroupPrepend\">$</InputGroup.Text>\n      </InputGroup.Prepend>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"\"\n        aria-describedby=\"inputGroupPrepend\"\n        required\n        onChange={props.onChange}\n        value={props.value}\n      />\n      <Form.Control.Feedback type=\"invalid\">required</Form.Control.Feedback>\n    </InputGroup>\n  </Form.Group>\n);\n\nexport default USDField;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport CardComponent from \"../Card\";\nimport RateField from \"./rateField\";\nimport InrField from \"./inrField\";\nimport USDField from \"./usdField\";\n\nclass Currency extends React.Component {\n  state = {\n    rate: 0,\n    inr: 0,\n    usd: 0\n  };\n  onChange = e => {\n    let inr = this.state.inr;\n    let rate = this.state.rate;\n    let usd = this.state.usd;\n    let newInr = 0,\n      newUsd = 0;\n    switch (e.target.id) {\n      case \"inr\":\n        inr = isNaN(e.target.value) ? 0 : e.target.value;\n        break;\n      case \"usd\":\n        usd = isNaN(e.target.value) ? 0 : e.target.value;\n        break;\n\n      case \"rate\":\n        rate = isNaN(e.target.value) ? 0 : e.target.value;\n        break;\n      default:\n        break;\n    }\n\n    switch (e.target.id) {\n      case \"usd\":\n        newInr = usd * rate;\n        newUsd = usd;\n        break;\n      case \"inr\":\n        newInr = inr;\n        newUsd = inr / rate;\n        break;\n      default:\n        break;\n    }\n\n    this.setState({\n      rate,\n      inr: newInr,\n      usd: newUsd\n    });\n  };\n  render() {\n    let { rate, inr, usd } = this.state;\n    return (\n      <Container style={{ marginTop: \"2%\" }}>\n        <Row>\n          <Col md={{ span: 6, offset: 3 }}>\n            <CardComponent id={1} name={\"Currency Converter\"}>\n              <RateField onChange={this.onChange} value={rate}></RateField>\n              <InrField onChange={this.onChange} value={inr}></InrField>\n              <USDField onChange={this.onChange} value={usd}></USDField>\n            </CardComponent>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\nexport default Currency;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Jumbotron } from \"react-bootstrap\";\n\nimport axios from \"axios\";\n\nimport Mission from \"../Mission\";\nimport { Loader } from \"../Extra/Spinner\";\nimport LaunchpadPage from \"../Launchpad\";\nimport PayloadClass from \"../Payload\";\nimport Currency from \"../Currency\";\n\nclass Space extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    // let thisSTATE = this.state.data;\n\n    axios\n      .get(\"https://api.spacexdata.com/v3/missions\")\n      .then(res => {\n        this.setState({ missionData: res.data });\n      })\n      .catch(function(error) {\n        alert(\"Cannot See Mission now, due to some technical issues\");\n      });\n\n    axios\n      .get(\"https://api.spacexdata.com/v3/launchpads\")\n      .then(res => {\n        this.setState({ launchData: res.data });\n      })\n      .catch(function(error) {\n        alert(\"Cannot See launch pad now, due to some technical issues\");\n      });\n  }\n\n  render() {\n    return (\n      <Switch>\n        <Route\n          path=\"/currency\"\n          render={props => <Currency {...props}></Currency>}\n        ></Route>\n        {this.state.missionData ? (\n          <Route\n            path=\"/mission\"\n            render={props => (\n              <Mission {...props} data={this.state.missionData}></Mission>\n            )}\n          ></Route>\n        ) : (\n          <Loader></Loader>\n        )}\n        {this.state.launchData ? (\n          <Route\n            path=\"/launchpad\"\n            render={props => (\n              <LaunchpadPage\n                {...props}\n                launchData={this.state.launchData}\n              ></LaunchpadPage>\n            )}\n          ></Route>\n        ) : (\n          <Loader></Loader>\n        )}\n        <Route\n          path=\"/payload/:id?\"\n          render={props => <PayloadClass {...props}></PayloadClass>}\n        ></Route>\n\n        <Route path=\"/\">\n          <Jumbotron className=\"centerDivJumbo\">\n            <img\n              src=\"https://www.spacex.com/sites/spacex/files/spacex_logo_white.png\"\n              alt=\"Home\"\n              width=\"30%\"\n            ></img>\n            <p\n              style={{\n                marginTop: \"2%\",\n                fontFamily: \"'Alatsi', sans-serif\",\n                marginLeft: \"-3%\"\n              }}\n            >\n              Application that provides information about SpaceX resources\n            </p>\n          </Jumbotron>\n        </Route>\n      </Switch>\n    );\n  }\n}\n\nexport default Space;\n","import React from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nimport Space from \"../Main\";\n\nexport default function App() {\n  return (\n    <Router>\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\n        <Navbar.Brand href=\"#/\">\n          <img\n            alt=\"\"\n            src=\"/images/startup.png\"\n            width=\"30\"\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n          />{\" \"}\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#/mission\">Mission</Nav.Link>\n            <Nav.Link href=\"#/launchpad\">Launch Pad</Nav.Link>\n            <Nav.Link href=\"#/currency\">Currency Converter</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <Space></Space>\n    </Router>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Layout from \"./Layout\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout></Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}